{"version":3,"file":"static/js/65.6a0972cf.chunk.js","mappings":"uIAgBA,IAbkB,SAACA,GACjB,OACE,gBACEC,MAAO,CACLC,OAAQ,OAEVC,UAAU,cAJZ,UAME,kBAAOA,UAAU,OAAjB,wBAAkCC,EAAAA,EAAAA,MAAlC,6B,0JCKN,EAZsB,WACpB,OACE,+BACE,SAACC,EAAA,EAAD,CACEF,UAAU,cACVG,IAAK,OACLC,IAAK,0C,UCPAC,EAAW,CACtB,CACEC,IAAK,OACLC,MAAO,OACPC,KAAMC,EAAAA,GAAAA,QAAAA,KAAAA,QAAmC,MAAO,KAChDC,aAAc,CAACC,EAAAA,EAAAA,MAAaA,EAAAA,EAAAA,OAE9B,CACEL,IAAK,cACLC,MAAOE,EAAAA,GAAAA,WAAAA,KACPD,KAAMC,EAAAA,GAAAA,WAAAA,KAAAA,QAAsC,MAAO,KACnDC,aAAc,CAACC,EAAAA,EAAAA,QAEjB,CACEL,IAAK,oBACLC,MAAOE,EAAAA,GAAAA,OAAAA,KACPD,KAAMC,EAAAA,GAAAA,OAAAA,KAAAA,QAAkC,MAAO,KAC/CC,aAAc,CAACC,EAAAA,EAAAA,QCqCnB,EAhDkB,WAChB,OAAsCC,EAAAA,EAAAA,MAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,gBAEZC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,MAEZC,EAAY,GAEZN,IACFM,GAAYC,EAAAA,EAAAA,IAAmBf,EAAUQ,EAASQ,OAQpD,OACE,+BACE,SAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,QAAQC,QAAQ,QAAxD,UACE,UAACC,EAAA,EAAD,YACE,SAACL,EAAA,QAAD,CAAcd,KAAK,IAAnB,UACE,SAAC,EAAD,MAEDM,IACC,iCACE,SAACQ,EAAA,SAAD,CAAe,gBAAc,2BAC7B,UAACA,EAAA,WAAD,CAAiBM,GAAG,wBAApB,WACE,SAACC,EAAA,EAAD,CAAK7B,UAAU,aACf,UAAC6B,EAAA,EAAD,WACGV,EAAUW,KAAI,SAACC,GACd,OACE,SAACF,EAAA,OAAD,CAAyBrB,KAAI,UAAKuB,EAAKvB,MAAvC,SACGuB,EAAKxB,OADOwB,EAAKzB,QAKvBQ,IAAmB,SAACe,EAAA,OAAD,CAAUG,QAzBxB,YACpBC,EAAAA,EAAAA,IAAWlB,GACXE,EAAQiB,KAAKC,EAAAA,GAAAA,OAuBqB,sC,4EC9C/B,IAAMC,EACM,oBADNA,EAEK,0CAFLA,EAGS,uBAGTC,EACS,uBADTA,EAEQ,gCAFRA,EAGO,qBCJPC,EAAsB,SAACC,GAClC,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACTC,EAAS,GAEVF,GAAmB,KAAVA,EAGE,IAAIG,OAChB,mSAEWC,KAAKJ,KAChBE,EAAOF,MAAQJ,GANjBM,EAAOF,MAAQJ,EAcjB,OAJKK,GAAyB,KAAbA,IACfC,EAAOD,SAAWL,GAGbM,GAGIG,EAAqB,SAACd,GACjC,IAAMW,EAAS,GAiBf,OAhBI,OAACX,QAAD,IAACA,GAAAA,EAAMe,UAA8B,KAAlBf,EAAKe,WAC1BJ,EAAOI,SAAWT,IAEZ,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMgB,QAAQC,QAAS,IACzBN,EAAOK,QAAUV,GAGf,OAAJN,QAAI,IAAJA,GAAAA,EAAMgB,QAAQE,SAAQ,SAAClB,GAChBA,GAAiB,KAATA,IACXW,EAAOK,QAAUV,MAIjB,OAACN,QAAD,IAACA,GAAAA,EAAMmB,QAA2B,MAAb,OAAJnB,QAAI,IAAJA,OAAA,EAAAA,EAAMmB,UACzBR,EAAOQ,OAASb,GAEXK,I,4OC7CIS,EAAmB,SAACC,EAAQ/B,GACrC,OAAO+B,EAAOC,QAAO,SAAAC,GACjB,OAAOA,EAAMC,WAAWC,SAASnC,OAI5BD,EAAqB,SAACqC,EAAMpC,GACrC,OAAOoC,EAAKJ,QAAO,SAAAK,GACf,OAAOA,EAAQhD,aAAa8C,SAASnC,OAIhCsC,EAAoB,SAACC,GAC9B,OAAOA,EAASP,QAAO,SAACQ,GAAD,OAAWA,EAAKC,cAG9BC,EAAuB,SAACH,EAAUhC,GAC3C,IAAMiC,EAAOD,EAASI,MAAK,SAAAC,GAAQ,OAAIC,OAAOD,EAASrC,MAAQsC,OAAOtC,MACtE,OAAGiC,GAGI,MAGEM,EAAqB,SAACC,GAE/B,OADAC,QAAQC,IAAI,CAACF,UAAAA,IACNA,GAAaA,EAAUf,QAAO,SAAAtB,GAAI,OAAGA,EAAK+B,cAGxCS,EAAiB,SAACC,GAC3B,IAAIC,EAAe,GACnBA,EAAa3B,SAAW0B,EAAK1B,SAC7B2B,EAAavB,OAASsB,EAAKtB,OAM3B,IAJA,IAAMwB,EAAaC,OAAOC,KAAKJ,EAAKzB,SAChCA,EAAU,GACR8B,EAAaL,EAAKzB,QAEf+B,EAAI,EAAGA,EAAIJ,EAAW1B,OAAQ8B,IACrC/B,EAAQb,KAAK2C,EAAWH,EAAWI,KAKrC,OAFAL,EAAa1B,QAAUA,EACvB0B,EAAaX,WAAY,EAClBW,GAGExE,EAAiB,WAE1B,OADU,IAAI8E,MACLC,eAGAC,EAAa,SAACpB,EAAMO,GAC7B,IAAMc,GAAY,kBAAMrB,GAAN,IAAYO,UAAU,CAACP,EAAKO,aAE9C,OADAc,EAAad,UAAYA,EAClBc,I,oDCtCX,IAdqB,SAAC,GAAwB,IAAvBxD,EAAsB,EAAtBA,QAASyD,EAAa,EAAbA,QAC9B,OACE,8BACGA,IACC,gBAAKrF,MAAO,CAACsF,MAAO,eAAgBpF,UAAU,UAA9C,UACE,SAAC,IAAD,CAAqB0B,QAASA,EAAS1B,UAAU,mBAAjD,SACGmF,GADSzD,S,qRC2HtB,EArHkB,WAChB,OAAwC2D,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,CAAE7C,MAAO,GAAIC,SAAU,KAApE,eAAOF,EAAP,KAAmBiD,EAAnB,KACA,GAAoCH,EAAAA,EAAAA,UAAS,IAA7C,eAAOI,EAAP,KAAmBC,EAAnB,KAEA,GAAkC9E,EAAAA,EAAAA,MAA1B+E,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAEX3E,GAAUC,EAAAA,EAAAA,MACVH,GAAWC,EAAAA,EAAAA,MAMX6E,EAAuB,SAACC,GAC5B,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdT,GAAc,kBACTjD,GADQ,cAEVyD,EAAOC,KAGJR,EAAWO,IACfN,GAAc,kBACTD,GADQ,cAEVO,EAAO,QAIZJ,IAAgBM,EAAAA,EAAAA,IAAwBnF,IAiB1C,OACE,+BACE,SAACoF,EAAA,EAAD,CAAMnG,UAAU,MAAMF,MAAO,CAAEsG,OAAQ,QAAvC,UACE,UAACD,EAAA,OAAD,YACE,eAAInG,UAAU,gCAAd,oBACA,SAACqG,EAAA,EAAD,CAAc3E,QAAQ,SAASyD,QAASS,KACxC,UAACU,EAAA,EAAD,YACE,UAACA,EAAA,QAAD,CAAYtG,UAAU,OAAOuG,UAAU,QAAvC,WACE,SAACD,EAAA,QAAD,qBACA,SAACA,EAAA,UAAD,CACEE,KAAK,QACLR,KAAK,QACLS,KAAK,KACLC,YAAY,cACZC,YAAY,OAAClB,QAAD,IAACA,IAAAA,EAAYjD,OACzBoE,SAAU,SAACd,GAAD,OAAOD,EAAqBC,IACtCe,SAAUlB,KAEZ,SAACW,EAAA,mBAAD,CAAuBE,KAAK,UAA5B,gBACGf,QADH,IACGA,OADH,EACGA,EAAYjD,YAIjB,UAAC8D,EAAA,QAAD,CAAYC,UAAU,WAAWvG,UAAU,OAA3C,WACE,SAACsG,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEE,KAAMlB,EAAe,OAAS,WAC9BU,KAAK,WACLS,KAAK,KACLC,YAAY,WACZC,YAAY,OAAClB,QAAD,IAACA,IAAAA,EAAYhD,UACzBmE,SAAU,SAACd,GAAD,OAAOD,EAAqBC,IACtCe,SAAUlB,KAEZ,SAACW,EAAA,mBAAD,CAAuBE,KAAK,UAA5B,gBACGf,QADH,IACGA,OADH,EACGA,EAAYhD,eAIjB,SAAC6D,EAAA,QAAD,CACEE,KAAK,WACLM,MAAM,gBACN9E,QAAS,SAAC8D,GAAD,OA7EM,SAACA,GAC1BP,EAAgBO,EAAEC,OAAOgB,SA4ECC,CAAmBlB,IACnC9F,UAAU,UAGZ,SAACiH,EAAA,EAAD,CAAWV,UAAU,cAAcvG,UAAU,cAA7C,UACE,SAACkH,EAAA,EAAD,CACExF,QAAQ,kBACR8E,KAAK,SACLxE,QAhEY,SAAC8D,GACzBA,EAAEqB,iBACFvB,IAAgBM,EAAAA,EAAAA,IAAwBnF,GACxC,IAAMqG,GAAmB9E,EAAAA,EAAAA,GAAoBC,GAE7C,GAAIoC,OAAOC,KAAKwC,GAAkBpE,OAAS,EACzC0C,EAAc0B,OACT,CAEL,KADWC,EAAAA,EAAAA,IAAUtG,EAAUwB,GACpB,OACXtB,EAAQiB,KAAKoF,EAAAA,GAAAA,QAmDL,UAKE,iBAAKtH,UAAU,OAAf,UACG2F,IACC,SAAC4B,EAAA,EAAD,CACEC,UAAU,OACV9F,QAAQ,OACR+E,KAAK,KACLgB,GAAG,UAGP,iBAAMzH,UAAU,OAAhB,qC,mFCzElB,EA3C8B,WAC5B,OAAkCqF,EAAAA,EAAAA,WAAS,GAA3C,eAAOqC,EAAP,KAAkBC,EAAlB,KAMA,OACE,+BACE,UAACC,EAAA,EAAD,CAAOC,KAAMH,EAAWI,OAAQ,WALlCH,GAKoDD,IAAYK,YAAU,EAAxE,WACE,SAACH,EAAA,SAAD,CAAcI,aAAW,EAAzB,UACE,kDAEF,SAACJ,EAAA,OAAD,UACGK,EAAAA,EAAAA,KAAqB,SAACC,GACrB,OACE,+BACE,UAAC/B,EAAA,EAAD,CAAoB1E,GAAG,QAAQzB,UAAU,MAAzC,WACE,SAACmG,EAAA,SAAD,oBAAiB+B,EAAK7G,KAAK8G,kBAC3B,UAAChC,EAAA,OAAD,YACE,4BACE,iBAAMrG,MAAO,CAAEsI,WAAY,QAA3B,oBADF,UAEMF,EAAKlC,UAEX,4BACE,iBAAMlG,MAAO,CAAEsI,WAAY,QAA3B,qBADF,UAEMF,EAAK1F,WAEX,4BACE,iBAAM1C,MAAO,CAAEsI,WAAY,QAA3B,wBADF,UAEMF,EAAKzF,kBAbJyF,EAAKtG,iBC6BhC,EAvCc,WACZ,OAAsChB,EAAAA,EAAAA,MAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,gBAEZG,GAAUC,EAAAA,EAAAA,MACVH,GAAWC,EAAAA,EAAAA,MAQjB,OANAqH,EAAAA,EAAAA,YAAU,WACJxH,GAAYC,GACdG,EAAQiB,KAAKoF,EAAAA,GAAAA,QAEd,CAACxG,EAAiBD,EAAUE,EAAUE,KAGvC,iCACE,SAACqH,EAAA,EAAD,KACA,UAAC3G,EAAA,EAAD,YACE,gBAAK3B,UAAU,UAAf,UACE,UAACuI,EAAA,EAAD,CAAKvI,UAAU,qDAAf,WACE,SAACwI,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,SAAC,EAAD,OAEF,SAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,SAACvI,EAAA,EAAD,CACEE,IAAKsI,EACL5I,MAAO,CACL6I,SAAU,WACVC,OAAQ,OACRxD,MAAO,kBAMjB,SAAC,EAAD,Y,yDC3CJqB,E,wFACW,SAASoC,EAAcC,GACpC,KAAKrC,GAAiB,IAATA,GAAcqC,IACrBC,EAAAA,EAAW,CACb,IAAIC,EAAYC,SAASC,cAAc,OACvCF,EAAUlJ,MAAM6I,SAAW,WAC3BK,EAAUlJ,MAAMqJ,IAAM,UACtBH,EAAUlJ,MAAMsF,MAAQ,OACxB4D,EAAUlJ,MAAM8I,OAAS,OACzBI,EAAUlJ,MAAMsJ,SAAW,SAC3BH,SAASI,KAAKC,YAAYN,GAC1BvC,EAAOuC,EAAUO,YAAcP,EAAUQ,YACzCP,SAASI,KAAKI,YAAYT,GAI9B,OAAOvC,E,wGChBT,GAAeiD,EAAAA,EAAAA,GAAmB,c,iICG5BC,EAA2BC,EAAAA,YAAiB,WAU/CC,GAAQ,IATTC,EASS,EATTA,SACA9J,EAQS,EARTA,UACA+J,EAOS,EAPTA,iBACAC,EAMS,EANTA,SACAvD,EAKS,EALTA,KACAwD,EAIS,EAJTA,WACAC,EAGS,EAHTA,SACAnC,EAES,EAFTA,WACGlI,GACM,YACTiK,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,SACxC,IAAMM,EAAc,GAAH,OAAMN,EAAN,WACXO,EAAwC,kBAAfJ,EAAP,UAAoCH,EAApC,uBAA2DG,GAA3D,UAA6EH,EAA7E,eACxB,OAAoBQ,EAAAA,EAAAA,KAAK,OAAD,QAAC,UAAYzK,GAAb,IACtBgK,IAAKA,EACL7J,UAAWuK,IAAWH,EAAapK,EAAWyG,GAAQ,GAAJ,OAAOqD,EAAP,YAAmBrD,GAAQuD,GAAY,GAAJ,OAAOI,EAAP,aAA+BrC,GAAc,GAAJ,OAAOqC,EAAP,eAAiCH,GAAcI,GAC7KH,UAAuBI,EAAAA,EAAAA,KAAK,MAAO,CACjCtK,UAAWuK,IAAW,GAAD,OAAIT,EAAJ,YAAwBC,GAC7CG,SAAUA,UAIhBP,EAAYa,YAAc,cAC1B,QC3BA,GAAed,EAAAA,EAAAA,GAAmB,gB,qCCQ5Be,EAA2Bb,EAAAA,YAAiB,WAI/CC,GAAQ,IAHTC,EAGS,EAHTA,SACA9J,EAES,EAFTA,UACGH,GACM,YAET,OADAiK,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,iBACpBQ,EAAAA,EAAAA,KAAKI,EAAAA,GAAD,QAAC,QACvBb,IAAKA,GACFhK,GAFmB,IAGtBG,UAAWuK,IAAWvK,EAAW8J,SAGrCW,EAAYD,YAAc,cAC1BC,EAAYE,aAjBS,CACnBC,WAAY,QACZ5C,aAAa,GAgBf,QCrBM6C,GAAgBC,E,QAAAA,GAAiB,MACvC,GAAepB,EAAAA,EAAAA,GAAmB,cAAe,CAC/CqB,UAAWF,I,0YCoBPF,EAAe,CACnB9C,MAAM,EACNmD,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,EACdC,cAAc,EACd5D,WAAW,EACX6D,SAAU1B,GAIZ,SAAS2B,EAAiBzL,GACxB,OAAoByK,EAAAA,EAAAA,KAAKiB,EAAAA,GAAD,QAAC,UAAW1L,GAAZ,IACtB2L,QAAS,QAIb,SAASC,EAAmB5L,GAC1B,OAAoByK,EAAAA,EAAAA,KAAKiB,EAAAA,GAAD,QAAC,UAAW1L,GAAZ,IACtB2L,QAAS,QAMb,IAAM5D,EAAqBgC,EAAAA,YAAiB,WAkCzCC,GAAQ,IAjCTC,EAiCS,EAjCTA,SACA9J,EAgCS,EAhCTA,UACAF,EA+BS,EA/BTA,MACA4L,EA8BS,EA9BTA,gBACA3B,EA6BS,EA7BTA,iBACAG,EA4BS,EA5BTA,SACUyB,EA2BD,EA3BTN,SACmBO,EA0BV,EA1BT,mBACoBC,EAyBX,EAzBT,oBACcC,EAwBL,EAxBT,cAGAjE,EAqBS,EArBTA,KACAL,EAoBS,EApBTA,UACAwD,EAmBS,EAnBTA,SACAC,EAkBS,EAlBTA,SACAc,EAiBS,EAjBTA,gBACAC,EAgBS,EAhBTA,OACAlE,EAeS,EAfTA,OACAmE,EAcS,EAdTA,UACAf,EAaS,EAbTA,UACAC,EAYS,EAZTA,aACAC,EAWS,EAXTA,aACAc,EAUS,EAVTA,oBACAC,EASS,EATTA,UACAC,EAQS,EARTA,OACAC,EAOS,EAPTA,UACAC,EAMS,EANTA,QACAC,EAKS,EALTA,WACAC,EAIS,EAJTA,SACAC,EAGS,EAHTA,kBACSC,GAEA,EAFTC,QACG9M,IACM,YACT,IAA+BwF,EAAAA,EAAAA,UAAS,IAAxC,iBAAOuH,GAAP,MAAmBC,GAAnB,MACA,IAAoDxH,EAAAA,EAAAA,WAAS,GAA7D,iBAAOyH,GAAP,MAA2BC,GAA3B,MACMC,IAAuBC,EAAAA,EAAAA,SAAO,GAC9BC,IAAyBD,EAAAA,EAAAA,SAAO,GAChCE,IAAgCF,EAAAA,EAAAA,QAAO,MAC7C,IAA6BG,EAAAA,EAAAA,KAA7B,iBAAOC,GAAP,MAAcC,GAAd,MACMC,IAAYC,EAAAA,EAAAA,GAAc3D,EAAKyD,IAC/BG,IAAaC,EAAAA,EAAAA,GAAiB5F,GAC9B6F,IAAQC,EAAAA,EAAAA,MACd9D,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,SACxC,IAAM+D,IAAeC,EAAAA,EAAAA,UAAQ,iBAAO,CAClChG,OAAQ2F,MACN,CAACA,KAEL,SAASM,KACP,OAAIrB,KACGsB,EAAAA,EAAAA,GAAiB,CACtBL,MAAAA,KAIJ,SAASM,GAAkBC,GACzB,GAAKnF,EAAAA,EAAL,CACA,IAAMoF,EAAyBJ,KAAkBK,oBAAsB,EACjEC,EAAqBH,EAAKI,cAAeC,EAAAA,EAAAA,GAAcL,GAAMM,gBAAgBC,aACnF5B,GAAS,CACP6B,aAAcP,IAA2BE,EAAqBM,SAAqBC,EACnFC,aAAcV,GAA0BE,EAAqBM,SAAqBC,KAItF,IAAME,IAAqBpB,EAAAA,EAAAA,IAAiB,WACtCL,IACFY,GAAkBZ,GAAM0B,YAG5BC,EAAAA,EAAAA,IAAe,YACbC,EAAAA,EAAAA,GAAoBC,OAAQ,SAAUJ,IACG,MAAzC3B,GAA8BgC,SAA2BhC,GAA8BgC,aAKzF,IAAMC,GAAwB,WAC5BpC,GAAqBmC,SAAU,GAG3BE,GAAgB,SAAAvJ,GAChBkH,GAAqBmC,SAAW9B,IAASvH,EAAEC,SAAWsH,GAAM0B,SAC9D7B,GAAuBiC,SAAU,GAGnCnC,GAAqBmC,SAAU,GAG3BG,GAA6B,WACjCvC,IAAsB,GACtBI,GAA8BgC,SAAUI,EAAAA,EAAAA,GAAclC,GAAM0B,QAAQ,WAClEhC,IAAsB,OAYpByC,GAAc,SAAA1J,GACD,WAAbkF,EAKAkC,GAAuBiC,SAAWrJ,EAAEC,SAAWD,EAAE2J,cACnDvC,GAAuBiC,SAAU,EAIzB,MAAVrH,GAA0BA,IAnBM,SAAAhC,GAC5BA,EAAEC,SAAWD,EAAE2J,eAInBH,KAKEI,CAA0B5J,IAkDxB6J,IAAiBC,EAAAA,EAAAA,cAAY,SAAAC,GAAa,OAAiBvF,EAAAA,EAAAA,KAAK,OAAD,QAAC,UAAYuF,GAAb,IACnE7P,UAAWuK,IAAW,GAAD,OAAIT,EAAJ,aAAyB2C,GAAoBjF,GAAa,aAC7E,CAACA,EAAWiF,EAAmB3C,IAC7BgG,IAAiB,kBAAKhQ,GACvB8M,IAILkD,GAAeC,QAAU,QAoBzB,OAAoBzF,EAAAA,EAAAA,KAAK0F,EAAAA,EAAAA,SAAuB,CAC9C/J,MAAO4H,GACP3D,UAAuBI,EAAAA,EAAAA,KAAK2F,EAAAA,EAAW,CACrCpI,KAAMA,EACNgC,IAAK0D,GACLvC,SAAUA,EACViB,UAAWA,EACXhB,UAAU,EAEVC,UAAWA,EACXC,aAAcA,EACdC,aAAcA,EACdc,oBAAqBA,EACrBH,gBA/EwB,SAAAjG,GACrBmF,GAAyB,WAAbD,EAKNC,GAAYc,GACrBA,EAAgBjG,IAHhBA,EAAEqB,iBACFmI,OA2EAtD,OAAQA,EACRlE,OAAQA,EACRwE,QAvEgB,SAAC4B,EAAMgC,GACrBhC,GACFD,GAAkBC,GAGT,MAAX5B,GAA2BA,EAAQ4B,EAAMgC,IAmEvC3D,WA3DmB,SAAC2B,EAAMgC,GACd,MAAd3D,GAA8BA,EAAW2B,EAAMgC,IAE/CC,EAAAA,EAAAA,IAAiBjB,OAAQ,SAAUJ,KAyDjC3C,UAAWA,EACXC,OAlEe,SAAA8B,GACwB,MAAzCf,GAA8BgC,SAA2BhC,GAA8BgC,UAC7E,MAAV/C,GAA0BA,EAAO8B,IAiE/B7B,UAAWA,EACXG,SAzDiB,SAAA0B,GACfA,IAAMA,EAAKpO,MAAMiQ,QAAU,IAEnB,MAAZvD,GAA4BA,EAAS0B,IAErCe,EAAAA,EAAAA,GAAoBC,OAAQ,SAAUJ,KAqDpCnC,QAASoB,KACTqC,WAAY5I,EAAY8D,OAAmBsD,EAC3CyB,mBAAoB7I,EAAYiE,OAAqBmD,EACrDe,eAAgBA,GAChBW,aA5CiB,SAAAC,GAAW,OAAiBjG,EAAAA,EAAAA,KAAK,OAAD,QAAC,QACpDjJ,KAAM,UACHkP,GAFgD,IAGnDzQ,MAAOgQ,GACP9P,UAAWuK,IAAWvK,EAAW8J,EAAUgD,IAAsB,GAAJ,OAAOhD,EAAP,YAC7D9H,QAASgJ,EAAWwE,QAAcZ,EAClC4B,UAAWnB,GACX,aAAcvD,EACd,kBAAmBF,EACnB,mBAAoBC,EACpB3B,UAAuBI,EAAAA,EAAAA,KAAKqB,GAAD,QAAC,UAAa9L,IAAd,IACzB4Q,YAAarB,GACbpP,UAAW0L,EACX3B,iBAAkBA,EAClBG,SAAUA,gBAkChBtC,EAAM4C,YAAc,QACpB5C,EAAM+C,aAAeA,EACrB,MAAehG,OAAO+L,OAAO9I,EAAO,CAClC+I,KAAMC,EACNC,OAAQpG,EACRqG,MAAOC,EACPC,OAAQC,EACRtF,OAAQhC,EACRuH,oBAAqB,IACrBC,6BAA8B","sources":["containers/TheFooter.js","containers/TheHeaderIcon.js","containers/_nav.js","containers/TheHeader.js","constants/formValidationErrors.js","utils/formValidations.js","utils/index.js","views/components/AlertMessage.js","views/pages/login/LoginForm.js","views/pages/login/CredentialsPopupModal.js","views/pages/login/Login.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import React from \"react\";\r\nimport { getCurrentYear } from \"../utils\";\r\n\r\nconst TheFooter = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        bottom: \"0px\",\r\n      }}\r\n      className=\"text-center\"\r\n    >\r\n      <small className=\"pb-3\">{`\\u00A9${getCurrentYear()} all right reserved`}</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheFooter;\r\n","import React from 'react';\r\nimport \"../css/headerIcon.css\";\r\nimport {Image} from 'react-bootstrap';\r\n\r\nconst TheHeaderIcon = () => {\r\n  return (\r\n    <>\r\n      <Image\r\n        className=\"icon-header\"\r\n        alt={\"Quiz\"}\r\n        src={\"logo/quizLogoWithoutBackground.png\"}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TheHeaderIcon","import appRoutePaths from \"../constants/appRoutePaths\";\r\nimport { roles } from \"../constants/roles\";\r\n\r\nexport const navItems = [\r\n  {\r\n    key: \"home\",\r\n    title: \"HOME\",\r\n    href: appRoutePaths.quizzes.path.replace(/\\//g, \"#\"),\r\n    accessibleBy: [roles.admin, roles.user],\r\n  },\r\n  {\r\n    key: \"manage-quiz\",\r\n    title: appRoutePaths.manageQuiz.name,\r\n    href: appRoutePaths.manageQuiz.path.replace(/\\//g, \"#\"),\r\n    accessibleBy: [roles.admin],\r\n  },\r\n  {\r\n    key: \"attempted Quizzes\",\r\n    title: appRoutePaths.myQuiz.name,\r\n    href: appRoutePaths.myQuiz.path.replace(/\\//g, \"#\"),\r\n    accessibleBy: [roles.user],\r\n  },\r\n];","import React from \"react\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login } from \"../constants/appRoutePaths\";\r\nimport { logoutUser, useAuthDispatch, useAuthState } from \"../context\";\r\nimport { getVisibleNavItems } from \"../utils\";\r\nimport TheHeaderIcon from \"./TheHeaderIcon\";\r\nimport { navItems } from \"./_nav\";\r\n\r\nconst TheHeader = () => {\r\n  const { authUser, isAuthenticated } = useAuthState();\r\n  \r\n  const dispatch = useAuthDispatch();\r\n  const history = useHistory();\r\n\r\n  let _navItems = [];\r\n\r\n  if (authUser) {\r\n    _navItems = getVisibleNavItems(navItems, authUser.role);\r\n  }\r\n\r\n  const logoutHandler = ()=>{\r\n    logoutUser(dispatch);\r\n    history.push(login.path);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\">\r\n            <TheHeaderIcon />\r\n          </Navbar.Brand>\r\n          {isAuthenticated && (\r\n            <>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"me-auto\"></Nav>\r\n                <Nav>\r\n                  {_navItems.map((item) => {\r\n                    return (\r\n                      <Nav.Link key={item.key} href={`${item.href}`}>\r\n                        {item.title}\r\n                      </Nav.Link>\r\n                    );\r\n                  })}\r\n                  {isAuthenticated && <Nav.Link onClick={logoutHandler}>LOGOUT</Nav.Link>}\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TheHeader;\r\n","export const loginFormErrors = {\r\n    emailRequired: \"Email is required\",\r\n    emailInvalid: \"Invalid email, please enter correct one\",\r\n    passwordRequired: \"Password is required\"\r\n}\r\n\r\nexport const questionValidationErrors = {\r\n    questionRequired: \"Question is required\",\r\n    optionsRequired: \"All option field are required\",\r\n    answerRequired: \"Answer is required\"\r\n}","import {\r\n  loginFormErrors,\r\n  questionValidationErrors,\r\n} from \"../constants/formValidationErrors\";\r\n\r\nexport const loginFormValidation = (formValues) => {\r\n  const { email, password } = formValues;\r\n  const errors = {};\r\n\r\n  if (!email || email === \"\") {\r\n    errors.email = loginFormErrors.emailRequired;\r\n  } else {\r\n    var pattern = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n    if (!pattern.test(email)) {\r\n      errors.email = loginFormErrors.emailInvalid;\r\n    }\r\n  }\r\n\r\n  if (!password || password === \"\") {\r\n    errors.password = loginFormErrors.passwordRequired;\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const questionValidation = (item) => {\r\n  const errors = {};\r\n  if (!item?.question || item.question === \"\") {\r\n    errors.question = questionValidationErrors.questionRequired;\r\n  }\r\n  if (item?.options.length < 4) {\r\n    errors.options = questionValidationErrors.optionsRequired;\r\n  }\r\n\r\n  item?.options.forEach((item) => {\r\n    if (!item || item === \"\") {\r\n      errors.options = questionValidationErrors.optionsRequired;\r\n    }\r\n  });\r\n\r\n  if (!item?.answer || item?.answer === \"\") {\r\n    errors.answer = questionValidationErrors.answerRequired;\r\n  }\r\n  return errors;\r\n};\r\n","export const getVisibleRoutes = (routes, role)=>{\r\n    return routes.filter(route=>{\r\n        return route.visibleFor.includes(role);\r\n    })\r\n}\r\n\r\nexport const getVisibleNavItems = (_nav, role)=>{\r\n    return _nav.filter(navItem=>{\r\n        return navItem.accessibleBy.includes(role);\r\n    })\r\n}\r\n\r\nexport const getActiveQuizList = (quizList)=>{\r\n    return quizList.filter((quiz) => !quiz.isDeleted);\r\n}\r\n\r\nexport const findQuizFromQuizList = (quizList, id)=>{\r\n    const quiz = quizList.find(quizItem => Number(quizItem.id) === Number(id));\r\n    if(quiz){\r\n        return quiz;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const getActiveQuestions = (questions)=>{\r\n    console.log({questions});\r\n    return questions && questions.filter(item=>!item.isDeleted);\r\n}\r\n\r\nexport const formatQuestion = (data)=>{\r\n    let questionData = {};\r\n    questionData.question = data.question;\r\n    questionData.answer = data.answer;\r\n\r\n    const objectKeys = Object.keys(data.options);\r\n    let options = [];\r\n    const newOptions = data.options;\r\n\r\n    for (let i = 0; i < objectKeys.length; i++) {\r\n      options.push(newOptions[objectKeys[i]]);\r\n    }\r\n\r\n    questionData.options = options;\r\n    questionData.isDeleted = false;\r\n    return questionData;\r\n}\r\n\r\nexport const getCurrentYear = ()=>{\r\n    const d = new Date();\r\n    return d.getFullYear();\r\n}\r\n\r\nexport const formatQuiz = (quiz, questions)=>{\r\n    const formatedQuiz ={...quiz, questions:[quiz.questions]};\r\n    formatedQuiz.questions = questions;\r\n    return formatedQuiz;\r\n}","import React from 'react'\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst AlertMessage = ({variant, message}) => {\r\n  return (\r\n    <>\r\n      {message && (\r\n        <div style={{width: \"fit-content\"}} className=\"mx-auto\">\r\n          <Alert key={variant} variant={variant} className=\"text-center mb-2\">\r\n            {message}\r\n          </Alert>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AlertMessage","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Card, Form, FormGroup, Spinner } from \"react-bootstrap\";\r\n\r\nimport { home } from \"../../../constants/appRoutePaths\";\r\nimport { loginFormValidation } from \"../../../utils/formValidations\";\r\nimport {\r\n  loginUser,\r\n  removeLoginErrorMessage,\r\n  useAuthDispatch,\r\n  useAuthState,\r\n} from \"../../../context\";\r\nimport AlertMessage from \"../../components/AlertMessage\";\r\n\r\nconst LoginForm = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [formValues, setFormValues] = useState({ email: \"\", password: \"\" });\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  const { loading, errorMessage } = useAuthState();\r\n\r\n  const history = useHistory();\r\n  const dispatch = useAuthDispatch();\r\n\r\n  const toggleShowPassword = (e) => {\r\n    setShowPassword(e.target.checked);\r\n  };\r\n\r\n  const inputOnChangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n\r\n    if (!!formErrors[name]) {\r\n      setFormErrors({\r\n        ...formErrors,\r\n        [name]: null,\r\n      });\r\n    }\r\n\r\n    errorMessage && removeLoginErrorMessage(dispatch);\r\n  };\r\n\r\n  const formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    errorMessage && removeLoginErrorMessage(dispatch);\r\n    const validationErrors = loginFormValidation(formValues);\r\n\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setFormErrors(validationErrors);\r\n    } else {\r\n      let user = loginUser(dispatch, formValues);\r\n      if (!user) return;\r\n      history.push(home.path);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"m-5\" style={{ border: \"none\" }}>\r\n        <Card.Body>\r\n          <h5 className=\"text-center mb-3 text-primary\">LOGIN</h5>\r\n          <AlertMessage variant=\"danger\" message={errorMessage}/>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                size=\"sm\"\r\n                placeholder=\"Enter email\"\r\n                isInvalid={!!formErrors?.email}\r\n                onChange={(e) => inputOnChangeHandler(e)}\r\n                disabled={loading}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {formErrors?.email}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\" className=\"mb-3\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                name=\"password\"\r\n                size=\"sm\"\r\n                placeholder=\"Password\"\r\n                isInvalid={!!formErrors?.password}\r\n                onChange={(e) => inputOnChangeHandler(e)}\r\n                disabled={loading}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {formErrors?.password}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"Show password\"\r\n              onClick={(e) => toggleShowPassword(e)}\r\n              className=\"mb-3\"\r\n            />\r\n\r\n            <FormGroup controlId=\"loginButton\" className=\"text-center\">\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                type=\"submit\"\r\n                onClick={formSubmitHandler}\r\n              >\r\n                <div className=\"px-2\">\r\n                  {loading && (\r\n                    <Spinner\r\n                      animation=\"grow\"\r\n                      variant=\"dark\"\r\n                      size=\"sm\"\r\n                      as=\"span\"\r\n                    />\r\n                  )}\r\n                  <span className=\"mx-2\">Login</span>\r\n                </div>\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Modal } from \"react-bootstrap\";\r\nimport { loginCredentials } from \"../../../mockStaticData/credentials\";\r\n\r\nconst CredentialsPopupModal = () => {\r\n  const [showModal, setShowModal] = useState(true);\r\n\r\n  const toggleModal = (value) => {\r\n    setShowModal(!value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={showModal} onHide={() => toggleModal(showModal)} scrollable>\r\n        <Modal.Header closeButton>\r\n          <div>Login Credentials</div>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {loginCredentials.map((user) => {\r\n            return (\r\n              <>\r\n                <Card key={user.id} bg=\"light\" className=\"m-2\">\r\n                  <Card.Header>{`${user.role.toUpperCase()}`}</Card.Header>\r\n                  <Card.Body>\r\n                    <div>\r\n                      <span style={{ fontWeight: \"bold\" }}>{`Name: `}</span>\r\n                      {`${user.name}`}\r\n                    </div>\r\n                    <div>\r\n                      <span style={{ fontWeight: \"bold\" }}>{`Email: `}</span>\r\n                      {`${user.email}`}\r\n                    </div>\r\n                    <div>\r\n                      <span style={{ fontWeight: \"bold\" }}>{`Password: `}</span>\r\n                      {`${user.password}`}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </>\r\n            );\r\n          })}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CredentialsPopupModal;\r\n","import React, { useEffect } from 'react';\r\nimport { Col, Container, Image, Row } from 'react-bootstrap';\r\nimport TheFooter from '../../../containers/TheFooter';\r\nimport TheHeader from '../../../containers/TheHeader';\r\nimport LoginForm from \"./LoginForm\";\r\nimport loginPageImage from \"../../../assets/login_page_image.jpg\";\r\nimport CredentialsPopupModal from './CredentialsPopupModal';\r\nimport { home } from '../../../constants/appRoutePaths';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuthDispatch, useAuthState } from '../../../context';\r\n\r\nconst Login = () => {\r\n  const { authUser, isAuthenticated } = useAuthState();\r\n\r\n  const history = useHistory();\r\n  const dispatch = useAuthDispatch();\r\n\r\n  useEffect(() => {\r\n    if (authUser && isAuthenticated) {\r\n      history.push(home.path);\r\n    }\r\n  }, [isAuthenticated, authUser, dispatch, history]);\r\n\r\n  return (\r\n    <>\r\n      <TheHeader />\r\n      <Container>\r\n        <div className=\"row m-4\">\r\n          <Row className=\"align-items-center flex-column-reverse flex-md-row\">\r\n            <Col md={6}>\r\n              <LoginForm />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Image\r\n                src={loginPageImage}\r\n                style={{\r\n                  position: \"relative\",\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <CredentialsPopupModal />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["props","style","bottom","className","getCurrentYear","Image","alt","src","navItems","key","title","href","appRoutePaths","accessibleBy","roles","useAuthState","authUser","isAuthenticated","dispatch","useAuthDispatch","history","useHistory","_navItems","getVisibleNavItems","role","Navbar","collapseOnSelect","expand","bg","variant","Container","id","Nav","map","item","onClick","logoutUser","push","login","loginFormErrors","questionValidationErrors","loginFormValidation","formValues","email","password","errors","RegExp","test","questionValidation","question","options","length","forEach","answer","getVisibleRoutes","routes","filter","route","visibleFor","includes","_nav","navItem","getActiveQuizList","quizList","quiz","isDeleted","findQuizFromQuizList","find","quizItem","Number","getActiveQuestions","questions","console","log","formatQuestion","data","questionData","objectKeys","Object","keys","newOptions","i","Date","getFullYear","formatQuiz","formatedQuiz","message","width","useState","showPassword","setShowPassword","setFormValues","formErrors","setFormErrors","loading","errorMessage","inputOnChangeHandler","e","target","name","value","removeLoginErrorMessage","Card","border","AlertMessage","Form","controlId","type","size","placeholder","isInvalid","onChange","disabled","label","checked","toggleShowPassword","FormGroup","Button","preventDefault","validationErrors","loginUser","home","Spinner","animation","as","showModal","setShowModal","Modal","show","onHide","scrollable","closeButton","loginCredentials","user","toUpperCase","fontWeight","useEffect","TheHeader","Row","Col","md","loginPageImage","position","height","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","top","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","createWithBsPrefix","ModalDialog","React","ref","bsPrefix","contentClassName","centered","fullscreen","children","useBootstrapPrefix","dialogClass","fullScreenClass","_jsx","classNames","displayName","ModalHeader","AbstractModalHeader","defaultProps","closeLabel","DivStyledAsH4","divWithClassName","Component","backdrop","keyboard","autoFocus","enforceFocus","restoreFocus","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","onEscapeKeyDown","onShow","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","useRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","window","current","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","BaseModal","isAppearing","addEventListener","transition","backdropTransition","renderDialog","dialogProps","onMouseUp","onMouseDown","assign","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}