{"version":3,"file":"static/js/329.fdb35d0e.chunk.js","mappings":"wIAgBA,IAbkB,SAACA,GACjB,OACE,gBACEC,MAAO,CACLC,OAAQ,OAEVC,UAAU,cAJZ,UAME,kBAAOA,UAAU,OAAjB,wBAAkCC,EAAAA,EAAAA,MAAlC,6B,0JCKN,EAZsB,WACpB,OACE,+BACE,SAACC,EAAA,EAAD,CACEF,UAAU,cACVG,IAAK,OACLC,IAAK,0C,UCPAC,EAAW,CACtB,CACEC,IAAK,OACLC,MAAO,OACPC,KAAMC,EAAAA,GAAAA,QAAAA,KAAAA,QAAmC,MAAO,KAChDC,aAAc,CAACC,EAAAA,EAAAA,MAAaA,EAAAA,EAAAA,OAE9B,CACEL,IAAK,cACLC,MAAOE,EAAAA,GAAAA,WAAAA,KACPD,KAAMC,EAAAA,GAAAA,WAAAA,KAAAA,QAAsC,MAAO,KACnDC,aAAc,CAACC,EAAAA,EAAAA,QAEjB,CACEL,IAAK,oBACLC,MAAOE,EAAAA,GAAAA,OAAAA,KACPD,KAAMC,EAAAA,GAAAA,OAAAA,KAAAA,QAAkC,MAAO,KAC/CC,aAAc,CAACC,EAAAA,EAAAA,QCqCnB,EAhDkB,WAChB,OAAsCC,EAAAA,EAAAA,MAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,gBAEZC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,MAEZC,EAAY,GAEZN,IACFM,GAAYC,EAAAA,EAAAA,IAAmBf,EAAUQ,EAASQ,OAQpD,OACE,+BACE,SAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,QAAQC,QAAQ,QAAxD,UACE,UAACC,EAAA,EAAD,YACE,SAACL,EAAA,QAAD,CAAcd,KAAK,IAAnB,UACE,SAAC,EAAD,MAEDM,IACC,iCACE,SAACQ,EAAA,SAAD,CAAe,gBAAc,2BAC7B,UAACA,EAAA,WAAD,CAAiBM,GAAG,wBAApB,WACE,SAACC,EAAA,EAAD,CAAK7B,UAAU,aACf,UAAC6B,EAAA,EAAD,WACGV,EAAUW,KAAI,SAACC,GACd,OACE,SAACF,EAAA,OAAD,CAAyBrB,KAAI,UAAKuB,EAAKvB,MAAvC,SACGuB,EAAKxB,OADOwB,EAAKzB,QAKvBQ,IAAmB,SAACe,EAAA,OAAD,CAAUG,QAzBxB,YACpBC,EAAAA,EAAAA,IAAWlB,GACXE,EAAQiB,KAAKC,EAAAA,GAAAA,OAuBqB,sC,mLCrChCC,GACJ,gBAAKpC,UAAU,mBAAf,UACE,SAACqC,EAAA,EAAD,CAASC,UAAU,SAASZ,QAAQ,cA8CxC,EA1CmB,WACjB,OAAqCd,EAAAA,EAAAA,MAA7BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,gBAEdyB,EAAgB,GAKpB,OAJG1B,IACD0B,GAAgBC,EAAAA,EAAAA,IAAiBC,EAAAA,EAAe5B,EAASQ,QAIzD,+BACE,iBAAMrB,UAAU,SAASF,MAAO,CAAE4C,WAAY,OAA9C,UACE,SAACf,EAAA,EAAD,CAAWgB,OAAK,EAAhB,UACE,SAAC,EAAAC,SAAD,CAAUC,SAAUT,EAApB,UACE,UAAC,KAAD,WACGvB,GACCC,GACAyB,EAAcT,KAAI,SAACgB,EAAOC,GACxB,OACE,SAAC,KAAD,CAEEC,KAAMF,EAAME,KACZC,MAAOH,EAAMG,MACbC,KAAMJ,EAAMI,KACZC,OAAQ,SAACtD,GAAD,OAAW,SAACiD,EAAMM,WAAP,UAAqBvD,MAJnCkD,OAQX,SAAC,KAAD,CACEM,KAAM5C,EAAAA,GAAAA,KAAAA,KACN6C,GAAI7C,EAAAA,GAAAA,QAAAA,mB,oBCbtB,EAtBkB,WAChB,OAAsCG,EAAAA,EAAAA,MAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,gBAEZG,GAAUC,EAAAA,EAAAA,MACVH,GAAWC,EAAAA,EAAAA,MASjB,OAPAuC,EAAAA,EAAAA,YAAU,WACH1C,GAAaC,KAChBmB,EAAAA,EAAAA,IAAWlB,GACXE,EAAQiB,KAAKC,EAAAA,GAAAA,SAEd,CAACrB,EAAiBD,EAAUE,EAAUE,KAGvC,iCACI,SAACuC,EAAA,EAAD,KACA,SAAC,EAAD,KACA,SAACC,EAAA,EAAD,S,4OC1BKjB,EAAmB,SAACkB,EAAQrC,GACrC,OAAOqC,EAAOC,QAAO,SAAAb,GACjB,OAAOA,EAAMc,WAAWC,SAASxC,OAI5BD,EAAqB,SAAC0C,EAAMzC,GACrC,OAAOyC,EAAKH,QAAO,SAAAI,GACf,OAAOA,EAAQrD,aAAamD,SAASxC,OAIhC2C,EAAoB,SAACC,GAC9B,OAAOA,EAASN,QAAO,SAACO,GAAD,OAAWA,EAAKC,cAG9BC,EAAuB,SAACH,EAAUrC,GAC3C,IAAMsC,EAAOD,EAASI,MAAK,SAAAC,GAAQ,OAAIC,OAAOD,EAAS1C,MAAQ2C,OAAO3C,MACtE,OAAGsC,GAGI,MAGEM,EAAqB,SAACC,GAE/B,OADAC,QAAQC,IAAI,CAACF,UAAAA,IACNA,GAAaA,EAAUd,QAAO,SAAA5B,GAAI,OAAGA,EAAKoC,cAGxCS,EAAiB,SAACC,GAC3B,IAAIC,EAAe,GACnBA,EAAaC,SAAWF,EAAKE,SAC7BD,EAAaE,OAASH,EAAKG,OAM3B,IAJA,IAAMC,EAAaC,OAAOC,KAAKN,EAAKO,SAChCA,EAAU,GACRC,EAAaR,EAAKO,QAEfE,EAAI,EAAGA,EAAIL,EAAWM,OAAQD,IACrCF,EAAQlD,KAAKmD,EAAWJ,EAAWK,KAKrC,OAFAR,EAAaM,QAAUA,EACvBN,EAAaX,WAAY,EAClBW,GAGE7E,EAAiB,WAE1B,OADU,IAAIuF,MACLC,eAGAC,EAAa,SAACxB,EAAMO,GAC7B,IAAMkB,GAAY,kBAAMzB,GAAN,IAAYO,UAAU,CAACP,EAAKO,aAE9C,OADAkB,EAAalB,UAAYA,EAClBkB","sources":["containers/TheFooter.js","containers/TheHeaderIcon.js","containers/_nav.js","containers/TheHeader.js","containers/TheContent.js","containers/TheLayout.js","utils/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { getCurrentYear } from \"../utils\";\r\n\r\nconst TheFooter = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        bottom: \"0px\",\r\n      }}\r\n      className=\"text-center\"\r\n    >\r\n      <small className=\"pb-3\">{`\\u00A9${getCurrentYear()} all right reserved`}</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheFooter;\r\n","import React from 'react';\r\nimport \"../css/headerIcon.css\";\r\nimport {Image} from 'react-bootstrap';\r\n\r\nconst TheHeaderIcon = () => {\r\n  return (\r\n    <>\r\n      <Image\r\n        className=\"icon-header\"\r\n        alt={\"Quiz\"}\r\n        src={\"logo/quizLogoWithoutBackground.png\"}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TheHeaderIcon","import appRoutePaths from \"../constants/appRoutePaths\";\r\nimport { roles } from \"../constants/roles\";\r\n\r\nexport const navItems = [\r\n  {\r\n    key: \"home\",\r\n    title: \"HOME\",\r\n    href: appRoutePaths.quizzes.path.replace(/\\//g, \"#\"),\r\n    accessibleBy: [roles.admin, roles.user],\r\n  },\r\n  {\r\n    key: \"manage-quiz\",\r\n    title: appRoutePaths.manageQuiz.name,\r\n    href: appRoutePaths.manageQuiz.path.replace(/\\//g, \"#\"),\r\n    accessibleBy: [roles.admin],\r\n  },\r\n  {\r\n    key: \"attempted Quizzes\",\r\n    title: appRoutePaths.myQuiz.name,\r\n    href: appRoutePaths.myQuiz.path.replace(/\\//g, \"#\"),\r\n    accessibleBy: [roles.user],\r\n  },\r\n];","import React from \"react\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login } from \"../constants/appRoutePaths\";\r\nimport { logoutUser, useAuthDispatch, useAuthState } from \"../context\";\r\nimport { getVisibleNavItems } from \"../utils\";\r\nimport TheHeaderIcon from \"./TheHeaderIcon\";\r\nimport { navItems } from \"./_nav\";\r\n\r\nconst TheHeader = () => {\r\n  const { authUser, isAuthenticated } = useAuthState();\r\n  \r\n  const dispatch = useAuthDispatch();\r\n  const history = useHistory();\r\n\r\n  let _navItems = [];\r\n\r\n  if (authUser) {\r\n    _navItems = getVisibleNavItems(navItems, authUser.role);\r\n  }\r\n\r\n  const logoutHandler = ()=>{\r\n    logoutUser(dispatch);\r\n    history.push(login.path);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\">\r\n            <TheHeaderIcon />\r\n          </Navbar.Brand>\r\n          {isAuthenticated && (\r\n            <>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"me-auto\"></Nav>\r\n                <Nav>\r\n                  {_navItems.map((item) => {\r\n                    return (\r\n                      <Nav.Link key={item.key} href={`${item.href}`}>\r\n                        {item.title}\r\n                      </Nav.Link>\r\n                    );\r\n                  })}\r\n                  {isAuthenticated && <Nav.Link onClick={logoutHandler}>LOGOUT</Nav.Link>}\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TheHeader;\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport {Container, Spinner} from \"react-bootstrap\";\r\n\r\nimport { useAuthState } from \"../context\";\r\nimport { privateRoutes } from \"../routes\";\r\nimport appRoutePaths from \"../constants/appRoutePaths\";\r\nimport { getVisibleRoutes } from \"../utils\";\r\n\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <Spinner animation=\"border\" variant=\"primary\" />\r\n  </div>\r\n);\r\n\r\nconst TheContent = () => {\r\n  const  {authUser, isAuthenticated} = useAuthState();\r\n\r\n  let visibleRoutes = [];\r\n  if(authUser){\r\n    visibleRoutes = getVisibleRoutes(privateRoutes, authUser.role);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main className=\"c-main\" style={{ paddingTop: \"0px\" }}>\r\n        <Container fluid>\r\n          <Suspense fallback={loading}>\r\n            <Switch>\r\n              {authUser &&\r\n                isAuthenticated &&\r\n                visibleRoutes.map((route, idx) => {\r\n                  return (\r\n                    <Route\r\n                      key={idx}\r\n                      path={route.path}\r\n                      exact={route.exact}\r\n                      name={route.name}\r\n                      render={(props) => <route.component {...props} />}\r\n                    />\r\n                  );\r\n                })}\r\n                <Redirect\r\n                  from={appRoutePaths.home.path}\r\n                  to={appRoutePaths.quizzes.path}\r\n                />\r\n              {/* <Redirect\r\n                to={appRoutePaths.error.path}\r\n              /> */}\r\n            </Switch>\r\n          </Suspense>\r\n        </Container>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TheContent;\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { login } from '../constants/appRoutePaths'\r\nimport { logoutUser, useAuthDispatch, useAuthState } from '../context'\r\nimport { quizList } from '../mockStaticData/quizList'\r\nimport TheContent from './TheContent'\r\nimport TheFooter from './TheFooter'\r\nimport TheHeader from './TheHeader'\r\n\r\nconst TheLayout = () => {\r\n  const { authUser, isAuthenticated } = useAuthState();\r\n\r\n  const history = useHistory();\r\n  const dispatch = useAuthDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!authUser || !isAuthenticated) {\r\n      logoutUser(dispatch);\r\n      history.push(login.path);\r\n    }\r\n  }, [isAuthenticated, authUser, dispatch, history]);\r\n\r\n  return (\r\n    <>\r\n        <TheHeader />\r\n        <TheContent />\r\n        <TheFooter />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TheLayout","export const getVisibleRoutes = (routes, role)=>{\r\n    return routes.filter(route=>{\r\n        return route.visibleFor.includes(role);\r\n    })\r\n}\r\n\r\nexport const getVisibleNavItems = (_nav, role)=>{\r\n    return _nav.filter(navItem=>{\r\n        return navItem.accessibleBy.includes(role);\r\n    })\r\n}\r\n\r\nexport const getActiveQuizList = (quizList)=>{\r\n    return quizList.filter((quiz) => !quiz.isDeleted);\r\n}\r\n\r\nexport const findQuizFromQuizList = (quizList, id)=>{\r\n    const quiz = quizList.find(quizItem => Number(quizItem.id) === Number(id));\r\n    if(quiz){\r\n        return quiz;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const getActiveQuestions = (questions)=>{\r\n    console.log({questions});\r\n    return questions && questions.filter(item=>!item.isDeleted);\r\n}\r\n\r\nexport const formatQuestion = (data)=>{\r\n    let questionData = {};\r\n    questionData.question = data.question;\r\n    questionData.answer = data.answer;\r\n\r\n    const objectKeys = Object.keys(data.options);\r\n    let options = [];\r\n    const newOptions = data.options;\r\n\r\n    for (let i = 0; i < objectKeys.length; i++) {\r\n      options.push(newOptions[objectKeys[i]]);\r\n    }\r\n\r\n    questionData.options = options;\r\n    questionData.isDeleted = false;\r\n    return questionData;\r\n}\r\n\r\nexport const getCurrentYear = ()=>{\r\n    const d = new Date();\r\n    return d.getFullYear();\r\n}\r\n\r\nexport const formatQuiz = (quiz, questions)=>{\r\n    const formatedQuiz ={...quiz, questions:[quiz.questions]};\r\n    formatedQuiz.questions = questions;\r\n    return formatedQuiz;\r\n}"],"names":["props","style","bottom","className","getCurrentYear","Image","alt","src","navItems","key","title","href","appRoutePaths","accessibleBy","roles","useAuthState","authUser","isAuthenticated","dispatch","useAuthDispatch","history","useHistory","_navItems","getVisibleNavItems","role","Navbar","collapseOnSelect","expand","bg","variant","Container","id","Nav","map","item","onClick","logoutUser","push","login","loading","Spinner","animation","visibleRoutes","getVisibleRoutes","privateRoutes","paddingTop","fluid","Suspense","fallback","route","idx","path","exact","name","render","component","from","to","useEffect","TheHeader","TheFooter","routes","filter","visibleFor","includes","_nav","navItem","getActiveQuizList","quizList","quiz","isDeleted","findQuizFromQuizList","find","quizItem","Number","getActiveQuestions","questions","console","log","formatQuestion","data","questionData","question","answer","objectKeys","Object","keys","options","newOptions","i","length","Date","getFullYear","formatQuiz","formatedQuiz"],"sourceRoot":""}